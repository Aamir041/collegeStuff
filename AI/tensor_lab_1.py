# -*- coding: utf-8 -*-
"""tensor_lab_1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/18CHkZXKEsbJn0OcP43yND9GXnf2wixu6
"""

import tensorflow as tf

print(tf.__version__)

from sklearn.datasets import make_circles

#make  1000 examples
n_samples = 1000

#create circles
X,y = make_circles(n_samples,
                   noise = 0.03,
                   random_state=42)

# check out the features
X

3 # see the first 10 lables
y[:10]

#Make dataframes of feature and labels
import pandas as pd
circles = pd.DataFrame({"X0":X[:,0], "X1":X[:,1],"label":y })
circles.head()

#  check out the different lables
circles.label.value_counts()

# visualize with a plot
import matplotlib.pyplot as plt
plt.scatter(X[:,0],X[:,1],c=y,cmap=plt.cm.RdYlBu);

tf.random.set_seed(42)
# 1. Create the model using the sequential API
model_1 = tf.keras.Sequential([
    tf.keras.layers.Dense(1)
])

#2 .Compile the model
model_1.compile(loss=tf.keras.losses.BinaryCrossentropy(),
                optimizer=tf.keras.optimizers.SGD(),
                metrics=['accuracy']
                )

# 3 fit the model
model_1.fit(X,y,epochs=5)

# 1. Create the model using the sequential API
model_2 = tf.keras.Sequential([
    tf.keras.layers.Dense(10)
])

#2 .Compile the model
model_2.compile(loss=tf.keras.losses.BinaryCrossentropy(),
                optimizer=tf.keras.optimizers.SGD(),
                metrics=['accuracy']
                )

# 3 fit the model
model_2.fit(X,y,epochs=5)